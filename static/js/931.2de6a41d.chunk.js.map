{"version":3,"file":"static/js/931.2de6a41d.chunk.js","mappings":"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","sources":["components/SearchBox.styled.js","components/SearchBox.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin: 20px 20px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n","import { Wrapper, Input } from './SearchBox.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  const handleChange = ({ currentTarget }) => {\n    setSearchQuery(currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <Input\n        onChange={handleChange}\n        value={searchQuery}\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Search movie...\"\n        autoFocus\n      />\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams, Link } from 'react-router-dom';\nimport { Oval } from 'react-loader-spinner';\nimport SearchBox from '../components/SearchBox';\nimport { getSearchMovies } from '../services/api';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    async function searchMovies() {\n      if (!searchQuery) {\n        return;\n      }\n      try {\n        setLoading(true);\n        setError(false);\n        const movie = await getSearchMovies(searchQuery);\n        setMovies(movie);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    searchMovies();\n  }, [searchQuery]);\n\n  const handleSubmit = querySearch => {\n    setSearchParams({ query: querySearch });\n  };\n\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n        ></img>\n        <p>{title}</p>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div>\n      <SearchBox onSubmit={handleSubmit} />\n      {loading && (\n        <Oval\n          ariaLabel=\"loading-indicator\"\n          height={100}\n          width={100}\n          strokeWidth={5}\n          strokeWidthSecondary={1}\n          color=\"blue\"\n          secondaryColor=\"white\"\n        />\n      )}\n      {error && <p>Error: {error}</p>}\n      {movies.length > 0 && <ul>{elements}</ul>}\n      {!loading && searchQuery && movies.length < 1 && <p>Nothing found!</p>}\n    </div>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst ROOT_KEY = '62e63fb69ff45b8c7b26a9723f0eb259';\n\nexport async function getTrending() {\n  const { data } = await axios.get(`trending/movie/day?api_key=${ROOT_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchMovies(query) {\n  const { data } = await axios.get(\n    `search/movie?api_key=${ROOT_KEY}&query=${query}`\n  );\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${ROOT_KEY}`);\n  return data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n"],"names":["Wrapper","styled","Input","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","onChange","currentTarget","value","toLowerCase","type","autoComplete","placeholder","autoFocus","movies","setMovies","loading","setLoading","error","setError","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovies","movie","searchMovies","elements","map","id","title","poster_path","to","state","from","src","alt","querySearch","query","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","length","axios","ROOT_KEY","getTrending","data","results","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}