{"version":3,"file":"static/js/884.7b7941fc.chunk.js","mappings":"kPAmGA,UAxFA,WAAyB,IAAD,IACtB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAM,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAkBxC,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIV,GAAW,GACXE,GAAS,GAHb,UAI+BS,EAAAA,EAAAA,IAAgBR,GAJ/C,OAIUS,EAJV,OAKId,EAASc,GALb,gDAOIV,EAAS,EAAD,IAPZ,yBASIF,GAAW,GATf,6EADc,uBAAC,WAAD,wBAada,KACC,CAACV,KAGF,4BACE,2BACE,SAAC,KAAD,CAAMW,GAAIP,EAAQQ,UAAU,cAA5B,8BAKDhB,IACC,SAAC,KAAD,CACEiB,UAAU,oBACVC,OAAQ,IACRC,MAAO,IACPC,YAAa,EACbC,qBAAsB,EACtBC,MAAM,OACNC,eAAe,UAGlBrB,IAAS,mCAAWA,KACpBJ,IACC,4BACE,iBAAKkB,UAAU,aAAf,WACE,gBACEQ,IAAG,yCAAoC1B,EAAM2B,aAC7CC,IAAK5B,EAAM6B,SAEb,iBAAKX,UAAU,mBAAf,WACE,0BACGlB,EAAM6B,MADT,KACkB7B,EAAM8B,aAAaC,MAAM,EAAG,GAD9C,QAGM,OAAL/B,QAAK,IAALA,OAAA,EAAAA,EAAOgC,gBACN,wCAAqC,GAArBhC,EAAMgC,aAAtB,QAEF,sCACM,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAOiC,YAAY,uBAAIjC,EAAMiC,YAC9B,mCACCjC,EAAMkC,OAAOC,OAAS,IACrB,uBAAInC,EAAMkC,OAAOE,KAAI,qBAAGC,QAAiBC,KAAK,eAIpD,iBAAKpB,UAAU,yBAAf,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAASD,GAAG,OAAON,MAAO,CAAEC,KAAMF,GAAlC,qBAIF,yBACE,SAAC,KAAD,CAASO,GAAG,UAAUN,MAAO,CAAEC,KAAMF,GAArC,iCAQV,SAAC,KAAD,S,0MC5FN6B,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAW,mCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBF,IAAAA,IAAA,qCAAwCC,IAD1D,uBACGE,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBN,IAAAA,IAAA,+BACGC,EADH,kBACqBK,IAFvC,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BR,GAA/B,yFACkBiC,IAAAA,IAAA,gBAAmBjC,EAAnB,oBAAsCkC,IADxD,uBACGE,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BxC,GAA/B,yFACkBiC,IAAAA,IAAA,gBACZjC,EADY,4BACekC,IAFjC,uBACGE,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzC,GAA/B,yFACkBiC,IAAAA,IAAA,gBACZjC,EADY,4BACekC,IAFjC,uBACGE,EADH,EACGA,KADH,kBAIEA,GAJF","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import {\n  useParams,\n  useLocation,\n  Link,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Oval } from 'react-loader-spinner';\nimport { getMovieDetails } from '../services/api';\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBack = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        setLoading(true);\n        setError(false);\n        const movieDetails = await getMovieDetails(movieId);\n        setMovie(movieDetails);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <span>\n        <Link to={goBack} className=\"btn__goBack\">\n          &#10094; Go back\n        </Link>\n      </span>\n\n      {loading && (\n        <Oval\n          ariaLabel=\"loading-indicator\"\n          height={100}\n          width={100}\n          strokeWidth={5}\n          strokeWidthSecondary={1}\n          color=\"blue\"\n          secondaryColor=\"white\"\n        />\n      )}\n      {error && <p>Error: {error}</p>}\n      {movie && (\n        <div>\n          <div className=\"aboutMovie\">\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div className=\"aboutMovie__Info\">\n              <h2>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </h2>\n              {movie?.vote_average && (\n                <p>User Score: {movie.vote_average * 10}%</p>\n              )}\n              <h3>Overview</h3>\n              {movie?.overview && <p>{movie.overview}</p>}\n              <h3>Genres</h3>\n              {movie.genres.length > 0 && (\n                <p>{movie.genres.map(({ name }) => name).join(', ')}</p>\n              )}\n            </div>\n          </div>\n          <div className=\"aboutMovie__Additional\">\n            <p>Additional Information</p>\n            <ul>\n              <li>\n                <NavLink to=\"cast\" state={{ from: goBack }}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\" state={{ from: goBack }}>\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <Outlet />\n    </div>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst ROOT_KEY = '62e63fb69ff45b8c7b26a9723f0eb259';\n\nexport async function getTrending() {\n  const { data } = await axios.get(`trending/movie/day?api_key=${ROOT_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchMovies(query) {\n  const { data } = await axios.get(\n    `search/movie?api_key=${ROOT_KEY}&query=${query}`\n  );\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${ROOT_KEY}`);\n  return data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n"],"names":["useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","goBack","state","from","useEffect","getMovieDetails","movieDetails","getDetails","to","className","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","length","map","name","join","axios","ROOT_KEY","getTrending","data","results","getSearchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}