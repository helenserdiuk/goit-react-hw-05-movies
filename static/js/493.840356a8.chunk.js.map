{"version":3,"file":"static/js/493.840356a8.chunk.js","mappings":"yOA2DA,UAtDA,WACE,OAA8BA,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOO,EAAP,KAAeC,EAAf,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIP,GAAW,GACXE,GAAS,GAHb,UAI8BM,EAAAA,EAAAA,IAAgBL,GAJ9C,OAIUM,EAJV,OAKIH,EAAUG,GALd,gDAOIP,EAAS,EAAD,IAPZ,yBASIF,GAAW,GATf,6EADc,uBAAC,WAAD,wBAadU,KACC,CAACP,KAGF,2BACGJ,IACC,SAAC,KAAD,CACEY,UAAU,oBACVC,OAAQ,IACRC,MAAO,IACPC,YAAa,EACbC,qBAAsB,EACtBC,MAAM,OACNC,eAAe,UAGlBhB,IAAS,oCAAYA,MACf,OAANI,QAAM,IAANA,OAAA,EAAAA,EAAQa,KAAKC,QAAS,IAAK,0CAC3Bd,IACC,wBACGA,EAAOa,KAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACf,2BACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAKH,KAEP,kCAAUA,MACV,uCAAeC,OANRH,a,iMC1CfM,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,iCAGLC,EAAW,mCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBJ,EAASK,IAAT,qCAA2CF,IAD7D,uBACGG,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBT,EAASK,IAAT,+BACGF,EADH,kBACqBM,IAFvC,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlC,GAA/B,yFACkBwB,EAASK,IAAT,gBAAsB7B,EAAtB,oBAAyC2B,IAD3D,uBACGG,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,yFACkBwB,EAASK,IAAT,gBACZ7B,EADY,4BACe2B,IAFjC,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnC,GAA/B,yFACkBwB,EAASK,IAAT,gBACZ7B,EADY,4BACe2B,IAFjC,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF","sources":["pages/Cast.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Oval } from 'react-loader-spinner';\nimport { getMovieCredits } from '../services/api';\n\nfunction Cast() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setLoading(true);\n        setError(false);\n        const movieActors = await getMovieCredits(movieId);\n        setActors(movieActors);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && (\n        <Oval\n          ariaLabel=\"loading-indicator\"\n          height={100}\n          width={100}\n          strokeWidth={5}\n          strokeWidthSecondary={1}\n          color=\"blue\"\n          secondaryColor=\"white\"\n        />\n      )}\n      {error && <p> Error: {error}</p>}\n      {actors?.cast.length < 1 && <p>No information</p>}\n      {actors && (\n        <ul>\n          {actors.cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                alt={name}\n              />\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst ROOT_KEY = '62e63fb69ff45b8c7b26a9723f0eb259';\n\nexport async function getTrending() {\n  const { data } = await instance.get(`trending/movie/day?api_key=${ROOT_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchMovies(query) {\n  const { data } = await instance.get(\n    `search/movie?api_key=${ROOT_KEY}&query=${query}`\n  );\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await instance.get(`movie/${movieId}?api_key=${ROOT_KEY}`);\n  return data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const { data } = await instance.get(\n    `movie/${movieId}/credits?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await instance.get(\n    `movie/${movieId}/reviews?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n"],"names":["useState","loading","setLoading","error","setError","movieId","useParams","actors","setActors","useEffect","getMovieCredits","movieActors","getCast","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","cast","length","map","id","profile_path","name","character","src","alt","instance","axios","baseURL","ROOT_KEY","getTrending","get","data","results","getSearchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}